{"version":3,"sources":["webpack:///./src/pages/clients/web/setup.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"gRAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,uCACA,2FACA,6BACA,gCAAe,+BAAGC,WAAW,KAAQ,CACjC,KAAQ,4CADG,yBAAf,4BAIA,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,uCAEL,iFACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,uEAKL,mCACA,gEAA+C,0BAAYA,WAAW,KAAvB,UAA/C,mEAC8B,+BAAGA,WAAW,KAAQ,CAChD,KAAQ,iCADkB,OAD9B,UAIA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,8EAIL,8BAAa,0BAAYA,WAAW,KAAvB,YAAb,+DACgC,0BAAYA,WAAW,KAAvB,UADhC,eAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,wCAQTJ,EAAWK,gBAAiB","file":"component---src-pages-clients-web-setup-mdx-0145d6bc202d0ea7bd07.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-ts/jacdac-ts/docs/src/components/layout.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Distributions`}</h1>\n    <p>{`There are various ways to integrate JACDAC into your web projects.`}</p>\n    <h2>{`NPM`}</h2>\n    <p>{`Add the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/jacdac-ts\"\n      }}>{`jacdac-ts npm package`}</a>{` module\nto your project`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install --save-dev jacdac-ts\n`}</code></pre>\n    <p>{`then import components as needed using ES6 import syntax`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { createUSBBus } from \"jacdac\"\nconst jd = createUSBBus()\n`}</code></pre>\n    <h2>{`CDN / UMD`}</h2>\n    <p>{`You can also use CDN services to import `}<inlineCode parentName=\"p\">{`jacdac`}</inlineCode>{` into your html page directly.\nThis will load the library as a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/umdjs/umd\"\n      }}>{`UMD`}</a>{` mode.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<script src=\"https://cdn.jsdelivr.net/npm/jacdac-ts@VERSION\"></script>\n`}</code></pre>\n    <p>{`where `}<inlineCode parentName=\"p\">{`@VERSION`}</inlineCode>{` is the desired version.\nAll exports are defined under the `}<inlineCode parentName=\"p\">{`jacdac`}</inlineCode>{` namespace.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const jd = jacdac.createUSBBus()\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}