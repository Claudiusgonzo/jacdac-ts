{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/index.mdx"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qKAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCSAY,IApCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQb,UAAWa,EAAKC,KAAKC,aAAaC,QAC1C,yBACEf,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOM,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,+UCjCH,IAAMC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,2CACA,gGAA+E,+BAAGC,WAAW,KAAQ,CACjG,KAAQ,uCADmE,UAA/E,cAGA,gCACA,gCAAe,+BAAGA,WAAW,KAAQ,CACjC,KAAQ,4CADG,iBAAf,4BAGA,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,mCAEL,gEAA+C,0BAAYA,WAAW,KAAvB,UAA/C,kCACA,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,8EAEL,+BACA,uEACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,gCAIL,4CACA,8JAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,+CAIL,iCACA,+HACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,oMAML,qJACwB,0BAAYA,WAAW,KAAvB,kBADxB,WAEA,oFACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,mCAIL,sCACA,sGACA,sBACE,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,oBADQ,WAApB,kCAGA,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,oBADQ,WAApB,+BAGA,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,oBADQ,WAApB,mDAGA,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,sBADQ,aAApB,sDAGA,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,+BADQ,sBAApB,iDAQNJ,EAAWK,gBAAiB","file":"component---src-pages-index-mdx-dee50c513d04644a3b80.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/jacdac-ts/jacdac-ts/docs/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`JACDAC TypeScript`}</h1>\n    <p>{`This repository contains a TypeScript/JavaScript client library for the `}<a parentName=\"p\" {...{\n        \"href\": \"https://microsoft.github.io/jacdac\"\n      }}>{`JACDAC`}</a>{` protocol.`}</p>\n    <h2>{`Import`}</h2>\n    <p>{`Add the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/jacdac-ts\"\n      }}>{`jacdac-ts npm`}</a>{` module to your project.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install --save jacdac-ts\n`}</code></pre>\n    <p>{`You can also use CDN services to import `}<inlineCode parentName=\"p\">{`jacdac`}</inlineCode>{` into your html page directly.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<script src=\"https://cdn.jsdelivr.net/npm/jacdac-ts@VERSION\"></script>\n`}</code></pre>\n    <h2>{`Usage`}</h2>\n    <p>{`Import the library in your Typescript project.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import * from 'jacdac-ts'\n`}</code></pre>\n    <h3>{`Connect to the bus`}</h3>\n    <p>{`You will need to connect to the JACDAC bus via WebUSB. This needs to be done from a user action, like a click,\nfor security reasons.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const jd = await jacdac.requestUSBBus();\n`}</code></pre>\n    <h3>{`Devices`}</h3>\n    <p>{`Once you have the bus connected, you can register to events when device get connected or disconnected.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`jd.on('deviceconnect', dev => console.log(\\`connect \\${dev}\\`)\njd.on('devicedisconnect', dev => console.log(\\`disconnect \\${dev}\\`)\njd.on('deviceannounce', dev => console.log(\\`announce \\${dev}\\`)\n`}</code></pre>\n    <p>{`Remember that when a device is first connected, it's list of services might not yet be populated.\nThis happens later on the `}<inlineCode parentName=\"p\">{`deviceannounce`}</inlineCode>{` event.`}</p>\n    <p>{`You can get a snapshot of the list of devices from the bus.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const devices = jd.devices()\n`}</code></pre>\n    <h2>{`Online tools`}</h2>\n    <p>{`A list of sample tools to operate on JACDAC devices, built with this library.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./tools/packets\"\n        }}>{`packets`}</a>{`, sniff all packets on the bus`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./tools/devices\"\n        }}>{`devices`}</a>{`, list of connected devices`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./tools/console\"\n        }}>{`console`}</a>{`, turns on verbose console and display messages`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./tools/streaming\"\n        }}>{`streaming`}</a>{`, live streaming of sensor data into range widgets`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./tools/streaming-rickshaw\"\n        }}>{`streaming-rickshaw`}</a>{`, live streaming of sensor data into graphs`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}