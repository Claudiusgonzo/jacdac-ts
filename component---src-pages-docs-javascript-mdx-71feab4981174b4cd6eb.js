(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"6Fz8":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return l}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("q1tI");var a=n("7ljp"),c=n("9Dj+");var s={},o={_frontmatter:s},i=c.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,c={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,["components"]);return Object(a.b)(i,Object.assign({},o,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",null,"JavaScript usage"),Object(a.b)("p",null,"Import the library in your Typescript project."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import * from 'jacdac-ts'\n")),Object(a.b)("h3",null,"Connect to the bus"),Object(a.b)("p",null,"You will need to connect to the JACDAC bus via WebUSB. This needs to be done from a user action, like a click,\nfor security reasons."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"const jd = jacdac.createUSBBus();\nawait jd.connectAsync();\n")),Object(a.b)("h3",null,"Devices"),Object(a.b)("p",null,"Once you have the bus connected, you can register to events when device get connected or disconnected."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"jd.on('deviceconnect', dev => console.log(`connect ${dev}`)\njd.on('devicedisconnect', dev => console.log(`disconnect ${dev}`)\njd.on('deviceannounce', dev => console.log(`announce ${dev}`)\n")),Object(a.b)("p",null,"Remember that when a device is first connected, it's list of services might not yet be populated.\nThis happens later on the ",Object(a.b)("inlineCode",{parentName:"p"},"deviceannounce")," event."),Object(a.b)("p",null,"You can get a snapshot of the list of devices from the bus."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"const devices = jd.devices()\n")),Object(a.b)("h2",null,"Online tools"),Object(a.b)("p",null,"A list of sample vanilla javascript tools to operate on JACDAC devices, built with this library."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/packets"}),"packets"),", sniff all packets on the bus"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/devices"}),"devices"),", list of connected devices"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/console"}),"console"),", turns on verbose console and display messages"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/streaming"}),"streaming"),", live streaming of sensor data into range widgets"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/streaming-rickshaw"}),"streaming-rickshaw"),", live streaming of sensor data into graphs")))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docs-javascript-mdx-71feab4981174b4cd6eb.js.map