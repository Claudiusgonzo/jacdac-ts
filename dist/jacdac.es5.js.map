{"version":3,"file":"jacdac.es5.js","sources":["../src/constants.ts","../src/utils.ts","../src/bus.ts","../src/packet.ts","../src/device.ts","../src/hf2.ts","../src/pretty.ts"],"sourcesContent":["\n// Registers 0x001-0x07f - r/w common to all services\n// Registers 0x080-0x0ff - r/w defined per-service\n// Registers 0x100-0x17f - r/o common to all services\n// Registers 0x180-0x1ff - r/o defined per-service\n// Registers 0x200-0xeff - custom, defined per-service\n// Registers 0xf00-0xfff - reserved for implementation, should not be on the wire\n\n// this is either binary (0 or non-zero), or can be gradual (eg. brightness of neopixel)\nexport const REG_INTENSITY = 0x01\n// the primary value of actuator (eg. servo angle)\nexport const REG_VALUE = 0x02\n// enable/disable streaming\nexport const REG_IS_STREAMING = 0x03\n// streaming interval in miliseconds\nexport const REG_STREAMING_INTERVAL = 0x04\n// for analog sensors\nexport const REG_LOW_THRESHOLD = 0x05\nexport const REG_HIGH_THRESHOLD = 0x06\n// limit power drawn; in mA\nexport const REG_MAX_POWER = 0x07\n\n// eg. one number for light sensor, all 3 coordinates for accelerometer\nexport const REG_READING = 0x101\n\nexport const CMD_GET_REG = 0x1000\nexport const CMD_SET_REG = 0x2000\n\nexport const CMD_TOP_MASK = 0xf000\nexport const CMD_REG_MASK = 0x0fff\n\n\n// Commands 0x000-0x07f - common to all services\n// Commands 0x080-0xeff - defined per-service\n// Commands 0xf00-0xfff - reserved for implementation\n// enumeration data for CTRL, ad-data for other services\nexport const CMD_ADVERTISEMENT_DATA = 0x00\n// event from sensor or on broadcast service\nexport const CMD_EVENT = 0x01\n// request to calibrate sensor\nexport const CMD_CALIBRATE = 0x02\n// request human-readable description of service\nexport const CMD_GET_DESCRIPTION = 0x03\n\n// Commands specific to control service\n// do nothing\nexport const CMD_CTRL_NOOP = 0x80\n// blink led or otherwise draw user's attention\nexport const CMD_CTRL_IDENTIFY = 0x81\n// reset device\nexport const CMD_CTRL_RESET = 0x82\n\nexport const STREAM_PORT_SHIFT = 7\nexport const STREAM_COUNTER_MASK = 0x001f\nexport const STREAM_CLOSE_MASK = 0x0020\nexport const STREAM_METADATA_MASK = 0x0040\n\nexport const JD_SERIAL_HEADER_SIZE = 16\nexport const JD_SERIAL_MAX_PAYLOAD_SIZE = 236\nexport const JD_SERVICE_NUMBER_MASK = 0x3f\nexport const JD_SERVICE_NUMBER_INV_MASK = 0xc0\nexport const JD_SERVICE_NUMBER_CRC_ACK = 0x3f\nexport const JD_SERVICE_NUMBER_STREAM = 0x3e\nexport const JD_SERVICE_NUMBER_CTRL = 0x00\n\n// the COMMAND flag signifies that the device_identifier is the recipent\n// (i.e., it's a command for the peripheral); the bit clear means device_identifier is the source\n// (i.e., it's a report from peripheral or a broadcast message)\nexport const JD_FRAME_FLAG_COMMAND = 0x01\n// an ACK should be issued with CRC of this package upon reception\nexport const JD_FRAME_FLAG_ACK_REQUESTED = 0x02\n// the device_identifier contains target service class number\nexport const JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS = 0x04\n","export function error(msg: string) {\n    throw new Error(msg)\n}\n\nexport function log(msg: string, v?: any) {\n    if (v === undefined)\n        console.log(\"JD: \" + msg)\n    else\n        console.log(\"JD: \" + msg, v)\n}\n\nexport function warn(msg: string, v?: any) {\n    if (v === undefined)\n        console.log(\"JD-WARN: \" + msg)\n    else\n        console.log(\"JD-WARN: \" + msg, v)\n}\n\nexport function delay<T>(millis: number, value?: T): Promise<T> {\n    return new Promise((resolve) => setTimeout(() => resolve(value), millis))\n}\n\nexport function memcpy(trg: Uint8Array, trgOff: number, src: ArrayLike<number>, srcOff?: number, len?: number) {\n    if (srcOff === void 0)\n        srcOff = 0\n    if (len === void 0)\n        len = src.length - srcOff\n    for (let i = 0; i < len; ++i)\n        trg[trgOff + i] = src[srcOff + i]\n}\n\nexport function bufferEq(a: Uint8Array, b: ArrayLike<number>) {\n    if (a == b)\n        return true\n    if (!a || !b || a.length != b.length)\n        return false\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] != b[i]) return false\n    }\n    return true\n}\n\n\nexport function hash(buf: Uint8Array, bits: number) {\n    bits |= 0\n    if (bits < 1)\n        return 0\n    const h = fnv1(buf)\n    if (bits >= 32)\n        return h >>> 0\n    else\n        return ((h ^ (h >>> bits)) & ((1 << bits) - 1)) >>> 0\n}\n\nexport function idiv(a: number, b: number) { return ((a | 0) / (b | 0)) | 0 }\nexport function fnv1(data: Uint8Array) {\n    let h = 0x811c9dc5\n    for (let i = 0; i < data.length; ++i) {\n        h = Math.imul(h, 0x1000193) ^ data[i]\n    }\n    return h\n}\n\nexport function crc(p: Uint8Array) {\n    let crc = 0xffff;\n    for (let i = 0; i < p.length; ++i) {\n        const data = p[i];\n        let x = (crc >> 8) ^ data;\n        x ^= x >> 4;\n        crc = (crc << 8) ^ (x << 12) ^ (x << 5) ^ x;\n        crc &= 0xffff;\n    }\n    return crc;\n}\n\nexport function ALIGN(n: number) { return (n + 3) & ~3 }\n\n// this will take lower 8 bits from each character\nexport function stringToUint8Array(input: string) {\n    let len = input.length;\n    let res = new Uint8Array(len)\n    for (let i = 0; i < len; ++i)\n        res[i] = input.charCodeAt(i) & 0xff;\n    return res;\n}\n\nexport function uint8ArrayToString(input: ArrayLike<number>) {\n    let len = input.length;\n    let res = \"\"\n    for (let i = 0; i < len; ++i)\n        res += String.fromCharCode(input[i]);\n    return res;\n}\n\n\nexport function fromUTF8(binstr: string) {\n    if (!binstr) return \"\"\n\n    // escape function is deprecated\n    let escaped = \"\"\n    for (let i = 0; i < binstr.length; ++i) {\n        let k = binstr.charCodeAt(i) & 0xff\n        if (k == 37 || k > 0x7f) {\n            escaped += \"%\" + k.toString(16);\n        } else {\n            escaped += binstr.charAt(i)\n        }\n    }\n\n    // decodeURIComponent does the actual UTF8 decoding\n    return decodeURIComponent(escaped)\n}\n\nexport function toUTF8(str: string, cesu8?: boolean) {\n    let res = \"\";\n    if (!str) return res;\n    for (let i = 0; i < str.length; ++i) {\n        let code = str.charCodeAt(i);\n        if (code <= 0x7f) res += str.charAt(i);\n        else if (code <= 0x7ff) {\n            res += String.fromCharCode(0xc0 | (code >> 6), 0x80 | (code & 0x3f));\n        } else {\n            if (!cesu8 && 0xd800 <= code && code <= 0xdbff) {\n                let next = str.charCodeAt(++i);\n                if (!isNaN(next))\n                    code = 0x10000 + ((code - 0xd800) << 10) + (next - 0xdc00);\n            }\n\n            if (code <= 0xffff)\n                res += String.fromCharCode(0xe0 | (code >> 12), 0x80 | ((code >> 6) & 0x3f), 0x80 | (code & 0x3f));\n            else\n                res += String.fromCharCode(0xf0 | (code >> 18), 0x80 | ((code >> 12) & 0x3f), 0x80 | ((code >> 6) & 0x3f), 0x80 | (code & 0x3f));\n        }\n\n    }\n    return res;\n}\n\n\nexport interface SMap<T> {\n    [index: string]: T;\n}\n\nexport class PromiseBuffer<T> {\n    private waiting: ((v: (T | Error)) => void)[] = [];\n    private available: (T | Error)[] = [];\n\n    drain() {\n        for (let f of this.waiting) {\n            f(new Error(\"Promise Buffer Reset\"))\n        }\n        this.waiting = []\n        this.available = []\n    }\n\n\n    pushError(v: Error) {\n        this.push(v as any)\n    }\n\n    push(v: T) {\n        let f = this.waiting.shift()\n        if (f) f(v)\n        else this.available.push(v)\n    }\n\n    shiftAsync(timeout = 0) {\n        if (this.available.length > 0) {\n            let v = this.available.shift()\n            if (v instanceof Error)\n                return Promise.reject<T>(v)\n            else\n                return Promise.resolve<T>(v)\n        } else\n            return new Promise<T>((resolve, reject) => {\n                let f = (v: (T | Error)) => {\n                    if (v instanceof Error) reject(v)\n                    else resolve(v)\n                }\n                this.waiting.push(f)\n                if (timeout > 0) {\n                    delay(timeout)\n                        .then(() => {\n                            let idx = this.waiting.indexOf(f)\n                            if (idx >= 0) {\n                                this.waiting.splice(idx, 1)\n                                reject(new Error(\"Timeout\"))\n                            }\n                        })\n                }\n            })\n    }\n}\n\n\nexport class PromiseQueue {\n    promises: SMap<(() => Promise<any>)[]> = {};\n\n    enqueue<T>(id: string, f: () => Promise<T>): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            let arr = this.promises[id]\n            if (!arr) {\n                arr = this.promises[id] = []\n            }\n            const cleanup = () => {\n                arr.shift()\n                if (arr.length == 0)\n                    delete this.promises[id]\n                else\n                    arr[0]()\n            }\n            arr.push(() =>\n                f().then(v => {\n                    cleanup()\n                    resolve(v)\n                }, err => {\n                    cleanup()\n                    reject(err)\n                }))\n            if (arr.length == 1)\n                arr[0]()\n        })\n    }\n}\n\nexport function toHex(bytes: ArrayLike<number>) {\n    let r = \"\"\n    for (let i = 0; i < bytes.length; ++i)\n        r += (\"0\" + bytes[i].toString(16)).slice(-2)\n    return r\n}\n\nexport function fromHex(hex: string) {\n    let r = new Uint8Array(hex.length >> 1)\n    for (let i = 0; i < hex.length; i += 2)\n        r[i >> 1] = parseInt(hex.slice(i, i + 2), 16)\n    return r\n}\n\nexport interface MutableArrayLike<T> {\n    readonly length: number;\n    [n: number]: T;\n}\n\nexport function write32(buf: MutableArrayLike<number>, pos: number, v: number) {\n    buf[pos + 0] = (v >> 0) & 0xff;\n    buf[pos + 1] = (v >> 8) & 0xff;\n    buf[pos + 2] = (v >> 16) & 0xff;\n    buf[pos + 3] = (v >> 24) & 0xff;\n}\n\nexport function write16(buf: MutableArrayLike<number>, pos: number, v: number) {\n    buf[pos + 0] = (v >> 0) & 0xff;\n    buf[pos + 1] = (v >> 8) & 0xff;\n}\n\nexport function read32(buf: ArrayLike<number>, pos: number) {\n    return (buf[pos] | (buf[pos + 1] << 8) | (buf[pos + 2] << 16) | (buf[pos + 3] << 24)) >>> 0\n}\n\nexport function read16(buf: ArrayLike<number>, pos: number) {\n    return buf[pos] | (buf[pos + 1] << 8)\n}\n\nexport function encodeU32LE(words: number[]) {\n    let r = new Uint8Array(words.length * 4)\n    for (let i = 0; i < words.length; ++i)\n        write32(r, i * 4, words[i])\n    return r\n}\n\nexport function decodeU32LE(buf: Uint8Array) {\n    let res: number[] = []\n    for (let i = 0; i < buf.length; i += 4)\n        res.push(read32(buf, i))\n    return res\n}\n\nexport const enum NumberFormat {\n    Int8LE = 1,\n    UInt8LE = 2,\n    Int16LE = 3,\n    UInt16LE = 4,\n    Int32LE = 5,\n    Int8BE = 6,\n    UInt8BE = 7,\n    Int16BE = 8,\n    UInt16BE = 9,\n    Int32BE = 10,\n    UInt32LE = 11,\n    UInt32BE = 12,\n    Float32LE = 13,\n    Float64LE = 14,\n    Float32BE = 15,\n    Float64BE = 16,\n}\n\nexport function getNumber(buf: ArrayLike<number>, fmt: NumberFormat, offset: number) {\n    switch (fmt) {\n        case NumberFormat.UInt8BE:\n        case NumberFormat.UInt8LE:\n            return buf[offset]\n        case NumberFormat.Int8BE:\n        case NumberFormat.Int8LE:\n            return (buf[offset] << 24) >> 24\n        case NumberFormat.UInt16LE:\n            return read16(buf, offset)\n        case NumberFormat.Int16LE:\n            return (read16(buf, offset) << 16) >> 16\n        case NumberFormat.UInt32LE:\n            return read32(buf, offset)\n        case NumberFormat.Int32LE:\n            return read32(buf, offset) >> 0\n        default:\n            throw new Error(\"unsupported fmt:\" + fmt)\n    }\n}\n\nexport function bufferToString(buf: Uint8Array) {\n    return fromUTF8(uint8ArrayToString(buf))\n}\n\nexport function bufferConcat(a: Uint8Array, b: Uint8Array) {\n    const r = new Uint8Array(a.length + b.length)\n    r.set(a, 0)\n    r.set(b, a.length)\n    return r\n}\n\nexport function jsonCopyFrom<T>(trg: T, src: T) {\n    let v = clone(src)\n    for (let k of Object.keys(src)) {\n        (trg as any)[k] = (v as any)[k]\n    }\n}\nexport function assert(cond: boolean, msg = \"Assertion failed\") {\n    if (!cond) {\n        debugger\n        throw new Error(msg)\n    }\n}\n\nexport function flatClone<T extends Object>(obj: T): T {\n    if (obj == null) return null\n    let r: any = {}\n    Object.keys(obj).forEach((k) => { r[k] = (obj as any)[k] })\n    return r;\n}\n\nexport function clone<T>(v: T): T {\n    if (v == null) return null\n    return JSON.parse(JSON.stringify(v))\n}\n\n","import { Packet } from \"./packet\"\nimport { getDevice } from \"./device\"\nimport { bufferEq } from \"./utils\"\nimport { JD_SERVICE_NUMBER_CTRL, CMD_ADVERTISEMENT_DATA } from \"./constants\";\n\n/**\n * A transport layer for the jacdac packets\n */\nexport interface Bus {\n    send: (p: Packet) => Promise<void>;\n}\n\nlet _bus: Bus;\n\n/**\n * Register transport layer function that sends packet.\n * @param f transport function sending packet.\n */\nexport function setBus(bus: Bus) {\n    _bus = bus;\n}\n\n/**\n * Sends a packet over the bus\n * @param p \n */\nexport function sendPacket(p: Packet): Promise<void> {\n    return _bus ? _bus.send(p) : Promise.resolve();\n}\n","import { warn, crc, ALIGN, write16, bufferConcat, toHex, fromHex, error, read32, read16, NumberFormat, getNumber, write32 } from \"./utils\";\nimport {\n    JD_FRAME_FLAG_COMMAND,\n    JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS,\n    CMD_SET_REG,\n    JD_SERIAL_HEADER_SIZE,\n    JD_FRAME_FLAG_ACK_REQUESTED,\n    JD_SERVICE_NUMBER_MASK,\n    JD_SERVICE_NUMBER_INV_MASK,\n    JD_SERIAL_MAX_PAYLOAD_SIZE,\n} from \"./constants\";\nimport {\n    sendPacket\n} from \"./bus\";\nimport { Device } from \"./device\";\n\nexport class Packet {\n    _header: Uint8Array;\n    _data: Uint8Array;\n    timestamp: number\n    dev: Device\n\n    private constructor() { }\n\n    static fromBinary(buf: Uint8Array) {\n        const p = new Packet()\n        p._header = buf.slice(0, JD_SERIAL_HEADER_SIZE)\n        p._data = buf.slice(JD_SERIAL_HEADER_SIZE)\n        return p\n    }\n\n    static from(service_command: number, data: Uint8Array) {\n        const p = new Packet()\n        p._header = new Uint8Array(JD_SERIAL_HEADER_SIZE)\n        p.data = data\n        p.service_command = service_command\n        return p\n    }\n\n    static onlyHeader(service_command: number) {\n        return Packet.from(service_command, new Uint8Array(0))\n    }\n\n    toBuffer() {\n        return bufferConcat(this._header, this._data)\n    }\n\n    get device_identifier() {\n        return toHex(this._header.slice(4, 4 + 8))\n    }\n    set device_identifier(id: string) {\n        const idb = fromHex(id)\n        if (idb.length != 8)\n            error(\"Invalid id\")\n        this._header.set(idb, 4)\n    }\n\n    get frame_flags() { return this._header[3] }\n\n    get multicommand_class() {\n        if (this.frame_flags & JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS)\n            return read32(this._header, 4)\n        return undefined\n    }\n\n    get size(): number {\n        return this._header[12];\n    }\n\n    get requires_ack(): boolean {\n        return (this.frame_flags & JD_FRAME_FLAG_ACK_REQUESTED) ? true : false;\n    }\n    set requires_ack(ack: boolean) {\n        if (ack != this.requires_ack)\n            this._header[3] ^= JD_FRAME_FLAG_ACK_REQUESTED\n    }\n\n    get service_number(): number {\n        return this._header[13] & JD_SERVICE_NUMBER_MASK;\n    }\n    set service_number(service_number: number) {\n        if (service_number == null)\n            throw new Error(\"service_number not set\")\n        this._header[13] = (this._header[13] & JD_SERVICE_NUMBER_INV_MASK) | service_number;\n    }\n\n    get service_class(): number {\n        if (this.dev)\n            return this.dev.serviceAt(this.service_number)\n        return undefined\n    }\n\n    get crc(): number {\n        return read16(this._header, 0)\n    }\n\n    get service_command(): number {\n        return read16(this._header, 14)\n    }\n    set service_command(cmd: number) {\n        write16(this._header, 14, cmd)\n    }\n\n    get is_reg_set() {\n        return (this.service_command >> 12) == (CMD_SET_REG >> 12)\n    }\n\n    get is_reg_get() {\n        return (this.service_command >> 12) == (CMD_SET_REG >> 12)\n    }\n\n    get data(): Uint8Array {\n        return this._data\n    }\n\n    set data(buf: Uint8Array) {\n        if (buf.length > JD_SERIAL_MAX_PAYLOAD_SIZE)\n            throw Error(\"Too big\")\n        this._header[12] = buf.length\n        this._data = buf\n    }\n\n    get uintData() {\n        let buf = this._data\n        if (buf.length == 0)\n            return undefined\n        if (buf.length < 4)\n            buf = bufferConcat(buf, new Uint8Array(4))\n        return read32(buf, 0)\n    }\n\n    get intData() {\n        let fmt: NumberFormat\n        switch (this._data.length) {\n            case 0:\n                return undefined\n            case 1:\n                fmt = NumberFormat.Int8LE\n                break\n            case 2:\n            case 3:\n                fmt = NumberFormat.Int16LE\n                break\n            default:\n                fmt = NumberFormat.Int32LE\n                break\n        }\n        return this.getNumber(fmt, 0)\n    }\n\n    compress(stripped: Uint8Array[]) {\n        if (stripped.length == 0)\n            return\n        let sz = -4\n        for (let s of stripped) {\n            sz += s.length\n        }\n        const data = new Uint8Array(sz)\n        this._header.set(stripped[0], 12)\n        data.set(stripped[0].slice(4), 0)\n        sz = stripped[0].length - 4\n        for (let s of stripped.slice(1)) {\n            data.set(s, sz)\n            sz += s.length\n        }\n        this._data = data\n    }\n\n    withFrameStripped() {\n        return bufferConcat(this._header.slice(12, 12 + 4), this._data)\n    }\n\n    getNumber(fmt: NumberFormat, offset: number) {\n        return getNumber(this._data, fmt, offset)\n    }\n\n    get is_command() {\n        return !!(this.frame_flags & JD_FRAME_FLAG_COMMAND)\n    }\n\n    get is_report() {\n        return !this.is_command\n    }\n\n    toString(): string {\n        let msg = `${this.device_identifier}/${this.service_number}[${this.frame_flags}]: ${this.service_command} sz=${this.size}`\n        if (this.size < 20) msg += \": \" + toHex(this.data)\n        else msg += \": \" + toHex(this.data.slice(0, 20)) + \"...\"\n        return msg\n    }\n\n    sendCoreAsync() {\n        this._header[2] = this.size + 4\n        write16(this._header, 0, crc(bufferConcat(this._header.slice(2), this._data)))\n        return sendPacket(this)\n    }\n\n    sendReportAsync(dev: Device) {\n        if (!dev)\n            return Promise.resolve()\n        this.device_identifier = dev.deviceId\n        return this.sendCoreAsync()\n    }\n\n    sendCmdAsync(dev: Device) {\n        if (!dev)\n            return Promise.resolve()\n        this.device_identifier = dev.deviceId\n        this._header[3] |= JD_FRAME_FLAG_COMMAND\n        return this.sendCoreAsync()\n    }\n\n    sendAsMultiCommandAsync(service_class: number) {\n        this._header[3] |= JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS | JD_FRAME_FLAG_COMMAND\n        write32(this._header, 4, service_class)\n        write32(this._header, 8, 0)\n        return this.sendCoreAsync()\n    }\n\n    static fromFrame(frame: Uint8Array, timestamp: number) {\n        return frameToPackets(frame, timestamp)\n    }\n}\n\n\nfunction frameToPackets(frame: Uint8Array, timestamp: number) {\n    const size = frame[2] || 0\n    if (frame.length < size + 12) {\n        warn(`${timestamp}ms: got only ${frame.length} bytes; expecting ${size + 12}`)\n    } else if (size < 4) {\n        warn(`${timestamp}ms: empty packet`)\n    } else {\n        const computed = crc(frame.slice(2, size + 12))\n        const actual = read16(frame, 0)\n        if (actual != computed)\n            console.log(`crc mismatch; sz=${size} got:${actual}, exp:${computed}`)\n\n        const res: Packet[] = []\n        if (frame.length != 12 + frame[2])\n            warn(`${timestamp}ms: unexpected packet len: ${frame.length}`)\n        for (let ptr = 12; ptr < 12 + frame[2];) {\n            const psz = frame[ptr] + 4\n            const sz = ALIGN(psz)\n            const pkt = bufferConcat(frame.slice(0, 12), frame.slice(ptr, ptr + psz))\n            if (ptr + sz > 12 + frame[2])\n                warn(`${timestamp}ms: invalid frame compression, res len=${res.length}`)\n            const p = Packet.fromBinary(pkt)\n            p.timestamp = timestamp\n            res.push(p)\n            ptr += sz\n        }\n\n        return res\n    }\n\n    return []\n}","import { Packet } from \"./packet\"\nimport { JD_SERVICE_NUMBER_CTRL, CMD_ADVERTISEMENT_DATA } from \"./constants\"\nimport { hash, fromHex, idiv, getNumber, NumberFormat, read32, SMap, bufferEq } from \"./utils\"\n\nconst devices_: Device[] = []\nexport const deviceNames: SMap<string> = {}\n\n/**\n * Gets the current list of known devices on the bus\n */\nexport function getDevices() { return devices_.slice() }\n\n/**\n * Gets a device on the bus\n * @param id \n */\nexport function getDevice(id: string) {\n    let d = devices_.find(d => d.deviceId == id)\n    if (!d)\n        d = new Device(id)\n    return d\n}\n\nexport class Device {\n    services: Uint8Array\n    lastSeen: number\n    lastServiceUpdate: number\n    currentReading: Uint8Array\n    private _shortId: string\n\n    constructor(public deviceId: string) {\n        devices_.push(this)\n    }\n\n    get name() {\n        return deviceNames[this.deviceId] || deviceNames[this.shortId]\n    }\n\n    get shortId() {\n        // TODO measure if caching is worth it\n        if (!this._shortId)\n            this._shortId = shortDeviceId(this.deviceId)\n        return this._shortId;\n    }\n\n    toString() {\n        return this.shortId + (this.name ? ` (${this.name})` : ``)\n    }\n\n    hasService(service_class: number) {\n        for (let i = 4; i < this.services.length; i += 4)\n            if (getNumber(this.services, NumberFormat.UInt32LE, i) == service_class)\n                return true\n        return false\n    }\n\n    serviceAt(idx: number) {\n        idx <<= 2\n        if (!this.services || idx + 4 > this.services.length)\n            return undefined\n        return read32(this.services, idx)\n    }\n\n    sendCtrlCommand(cmd: number, payload: Buffer = null) {\n        const pkt = !payload ? Packet.onlyHeader(cmd) : Packet.from(cmd, payload)\n        pkt.service_number = JD_SERVICE_NUMBER_CTRL\n        pkt.sendCmdAsync(this)\n    }\n}\n\n\n// 4 letter ID; 0.04%/0.01%/0.002% collision probability among 20/10/5 devices\n// 3 letter ID; 1.1%/2.6%/0.05%\n// 2 letter ID; 25%/6.4%/1.5%\nexport function shortDeviceId(devid: string) {\n    const h = hash(fromHex(devid), 30)\n    return String.fromCharCode(0x41 + h % 26) +\n        String.fromCharCode(0x41 + idiv(h, 26) % 26) +\n        String.fromCharCode(0x41 + idiv(h, 26 * 26) % 26) +\n        String.fromCharCode(0x41 + idiv(h, 26 * 26 * 26) % 26)\n}\n\n\n/**\n * Ingests and process a packet received from the bus.\n * @param pkt a jacdac packet\n */\nexport function processPacket(pkt: Packet) {\n    if (pkt.multicommand_class) {\n        //\n    } else if (pkt.is_command) {\n        pkt.dev = getDevice(pkt.device_identifier)\n    } else {\n        const dev = pkt.dev = getDevice(pkt.device_identifier)\n        dev.lastSeen = pkt.timestamp\n\n        if (pkt.service_number == JD_SERVICE_NUMBER_CTRL) {\n            if (pkt.service_command == CMD_ADVERTISEMENT_DATA) {\n                if (!bufferEq(pkt.data, dev.services)) {\n                    dev.services = pkt.data\n                    dev.lastServiceUpdate = pkt.timestamp\n                    // reattach(dev)\n                }\n            }\n        }\n    }\n}\n","import * as U from \"./utils\"\n\nconst controlTransferGetReport = 0x01;\nconst controlTransferSetReport = 0x09;\nconst controlTransferOutReport = 0x200;\nconst controlTransferInReport = 0x100;\n\n// see https://github.com/microsoft/uf2/blob/master/hf2.md for full spec\nexport const HF2_CMD_BININFO = 0x0001 // no arguments\nexport const HF2_MODE_BOOTLOADER = 0x01\nexport const HF2_MODE_USERSPACE = 0x02\n/*\nstruct HF2_BININFO_Result {\n    uint32_t mode;\n    uint32_t flash_page_size;\n    uint32_t flash_num_pages;\n    uint32_t max_message_size;\n};\n*/\n\nexport const HF2_CMD_INFO = 0x0002\n// no arguments\n// results is utf8 character array\n\nexport const HF2_CMD_RESET_INTO_APP = 0x0003// no arguments, no result\n\nexport const HF2_CMD_RESET_INTO_BOOTLOADER = 0x0004  // no arguments, no result\n\nexport const HF2_CMD_START_FLASH = 0x0005   // no arguments, no result\n\nexport const HF2_CMD_WRITE_FLASH_PAGE = 0x0006\n/*\nstruct HF2_WRITE_FLASH_PAGE_Command {\n    uint32_t target_addr;\n    uint32_t data[flash_page_size];\n};\n*/\n// no result\n\nexport const HF2_CMD_CHKSUM_PAGES = 0x0007\n/*\nstruct HF2_CHKSUM_PAGES_Command {\n    uint32_t target_addr;\n    uint32_t num_pages;\n};\nstruct HF2_CHKSUM_PAGES_Result {\n    uint16_t chksums[num_pages];\n};\n*/\n\nexport const HF2_CMD_READ_WORDS = 0x0008\n/*\nstruct HF2_READ_WORDS_Command {\n    uint32_t target_addr;\n    uint32_t num_words;\n};\nstruct HF2_READ_WORDS_Result {\n    uint32_t words[num_words];\n};\n*/\n\nexport const HF2_CMD_WRITE_WORDS = 0x0009\n/*\nstruct HF2_WRITE_WORDS_Command {\n    uint32_t target_addr;\n    uint32_t num_words;\n    uint32_t words[num_words];\n};\n*/\n// no result\n\nexport const HF2_CMD_DMESG = 0x0010\n// no arguments\n// results is utf8 character array\n\nexport const HF2_FLAG_SERIAL_OUT = 0x80\nexport const HF2_FLAG_SERIAL_ERR = 0xC0\nexport const HF2_FLAG_CMDPKT_LAST = 0x40\nexport const HF2_FLAG_CMDPKT_BODY = 0x00\nexport const HF2_FLAG_MASK = 0xC0\nexport const HF2_SIZE_MASK = 63\n\nexport const HF2_STATUS_OK = 0x00\nexport const HF2_STATUS_INVALID_CMD = 0x01\nexport const HF2_STATUS_EXEC_ERR = 0x02\nexport const HF2_STATUS_EVENT = 0x80\n\n// the eventId is overlayed on the tag+status; the mask corresponds\n// to the HF2_STATUS_EVENT above\nexport const HF2_EV_MASK = 0x800000\n\nexport const HF2_CMD_JDS_CONFIG = 0x0020\nexport const HF2_CMD_JDS_SEND = 0x0021\nexport const HF2_EV_JDS_PACKET = 0x800020\n\n\nexport class Transport {\n    dev: USBDevice;\n    iface: USBInterface;\n    altIface: USBAlternateInterface;\n    epIn: USBEndpoint;\n    epOut: USBEndpoint;\n    readLoopStarted = false;\n    ready = false;\n\n    constructor(private requestDevice: (options: USBDeviceRequestOptions) => Promise<USBDevice>) {\n\n    }\n\n    onData = (v: Uint8Array) => { };\n    onError = (e: Error) => {\n        console.error(\"HF2 error: \" + (e ? e.stack : e))\n    };\n\n    log(msg: string, v?: any) {\n        if (v != undefined)\n            console.log(\"HF2: \" + msg, v)\n        else\n            console.log(\"HF2: \" + msg)\n    }\n\n\n    private clearDev() {\n        if (this.dev) {\n            this.dev = null\n            this.epIn = null\n            this.epOut = null\n        }\n    }\n\n    disconnectAsync() {\n        this.ready = false\n        if (!this.dev) return Promise.resolve()\n        this.log(\"close device\")\n        return this.dev.close()\n            .catch(e => {\n                // just ignore errors closing, most likely device just disconnected\n            })\n            .then(() => {\n                this.clearDev()\n                return U.delay(500)\n            })\n    }\n\n    private recvPacketAsync(): Promise<Uint8Array> {\n        let final = (res: USBInTransferResult) => {\n            if (res.status != \"ok\")\n                this.error(\"USB IN transfer failed\")\n            let arr = new Uint8Array(res.data.buffer)\n            if (arr.length == 0)\n                return this.recvPacketAsync()\n            return arr\n        }\n\n        if (!this.dev)\n            return Promise.reject(new Error(\"Disconnected\"))\n\n        if (!this.epIn) {\n            return this.dev.controlTransferIn({\n                requestType: \"class\",\n                recipient: \"interface\",\n                request: controlTransferGetReport,\n                value: controlTransferInReport,\n                index: this.iface.interfaceNumber\n            }, 64).then(final)\n        }\n\n        return this.dev.transferIn(this.epIn.endpointNumber, 64)\n            .then(final)\n    }\n\n    error(msg: string) {\n        throw new Error(`USB error on device ${this.dev ? this.dev.productName : \"n/a\"} (${msg})`)\n    }\n\n    private async readLoop() {\n        if (this.readLoopStarted)\n            return\n        this.readLoopStarted = true\n        this.log(\"start read loop\")\n\n        while (true) {\n            if (!this.ready) {\n                break\n                //await U.delay(300)\n                //continue\n            }\n\n            try {\n                const buf = await this.recvPacketAsync()\n\n                if (buf[0]) {\n                    // we've got data; retry reading immedietly after processing it\n                    this.onData(buf)\n                } else {\n                    // throttle down if no data coming\n                    await U.delay(5)\n                }\n            } catch (err) {\n                if (this.dev)\n                    this.onError(err)\n                await U.delay(300)\n            }\n        }\n    }\n\n    sendPacketAsync(pkt: Uint8Array) {\n        if (!this.dev)\n            return Promise.reject(new Error(\"Disconnected\"))\n        U.assert(pkt.length <= 64)\n        if (!this.epOut) {\n            return this.dev.controlTransferOut({\n                requestType: \"class\",\n                recipient: \"interface\",\n                request: controlTransferSetReport,\n                value: controlTransferOutReport,\n                index: this.iface.interfaceNumber\n            }, pkt).then(res => {\n                if (res.status != \"ok\")\n                    this.error(\"USB CTRL OUT transfer failed\")\n            })\n        }\n        return this.dev.transferOut(this.epOut.endpointNumber, pkt)\n            .then(res => {\n                if (res.status != \"ok\")\n                    this.error(\"USB OUT transfer failed\")\n            })\n    }\n\n\n    async init() {\n        this.dev = await this.requestDevice({ filters: [{}] })\n        this.iface = undefined;\n        this.altIface = undefined;\n        this.log(\"connect device: \" + this.dev.manufacturerName + \" \" + this.dev.productName)\n\n        // resolve interfaces\n        if (this.dev.deviceVersionMajor == 42) {\n            for (const iface of this.dev.configuration.interfaces) {\n                const alt = iface.alternates[0]\n                if (alt.interfaceClass == 0xff && alt.interfaceSubclass == 42) {\n                    this.iface = iface;\n                    this.altIface = alt;\n                    break;\n                }\n            }\n        }\n\n        if (!this.iface) throw new Error(\"HF2 interface not found\")\n\n        await this.dev.open()\n        await this.dev.selectConfiguration(1)\n\n        if (this.altIface.endpoints.length) {\n            this.epIn = this.altIface.endpoints.filter(e => e.direction == \"in\")[0]\n            this.epOut = this.altIface.endpoints.filter(e => e.direction == \"out\")[0]\n            U.assert(this.epIn.packetSize == 64);\n            U.assert(this.epOut.packetSize == 64);\n        }\n        this.log(\"claim interface\")\n        await this.dev.claimInterface(this.iface.interfaceNumber)\n        this.log(\"all connected\")\n        this.ready = true\n        this.readLoop()\n    }\n}\n\nexport class Proto {\n    eventHandlers: U.SMap<(buf: Uint8Array) => void> = {}\n    msgs = new U.PromiseBuffer<Uint8Array>()\n    cmdSeq = (Math.random() * 0xffff) | 0;\n    private lock = new U.PromiseQueue();\n\n    constructor(public io: Transport) {\n        let frames: Uint8Array[] = []\n\n        io.onData = buf => {\n            let tp = buf[0] & HF2_FLAG_MASK\n            let len = buf[0] & 63\n            //console.log(`msg tp=${tp} len=${len}`)\n            let frame = new Uint8Array(len)\n            U.memcpy(frame, 0, buf, 1, len)\n            if (tp & HF2_FLAG_SERIAL_OUT) {\n                this.onSerial(frame, tp == HF2_FLAG_SERIAL_ERR)\n                return\n            }\n            frames.push(frame)\n            if (tp == HF2_FLAG_CMDPKT_BODY) {\n                return\n            } else {\n                U.assert(tp == HF2_FLAG_CMDPKT_LAST)\n                let total = 0\n                for (let f of frames) total += f.length\n                let r = new Uint8Array(total)\n                let ptr = 0\n                for (let f of frames) {\n                    U.memcpy(r, ptr, f)\n                    ptr += f.length\n                }\n                frames = []\n                if (r[2] & HF2_STATUS_EVENT) {\n                    // asynchronous event\n                    this.handleEvent(r)\n                } else {\n                    this.msgs.push(r)\n                }\n            }\n        }\n    }\n\n\n    error(m: string) {\n        return this.io.error(m)\n    }\n\n    talkAsync(cmd: number, data?: Uint8Array) {\n        let len = 8\n        if (data) len += data.length\n        let pkt = new Uint8Array(len)\n        let seq = ++this.cmdSeq & 0xffff\n        U.write32(pkt, 0, cmd);\n        U.write16(pkt, 4, seq);\n        U.write16(pkt, 6, 0);\n        if (data)\n            U.memcpy(pkt, 8, data, 0, data.length)\n        let numSkipped = 0\n        let handleReturnAsync = (): Promise<Uint8Array> =>\n            this.msgs.shiftAsync(1000) // we wait up to a second\n                .then(res => {\n                    if (U.read16(res, 0) != seq) {\n                        if (numSkipped < 3) {\n                            numSkipped++\n                            this.io.log(`message out of sync, (${seq} vs ${U.read16(res, 0)}); will re-try`)\n                            return handleReturnAsync()\n                        }\n                        this.error(\"out of sync\")\n                    }\n                    let info = \"\"\n                    if (res[3])\n                        info = \"; info=\" + res[3]\n                    switch (res[2]) {\n                        case HF2_STATUS_OK:\n                            return res.slice(4)\n                        case HF2_STATUS_INVALID_CMD:\n                            this.error(\"invalid command\" + info)\n                            break\n                        case HF2_STATUS_EXEC_ERR:\n                            this.error(\"execution error\" + info)\n                            break\n                        default:\n                            this.error(\"error \" + res[2] + info)\n                            break\n                    }\n                    return null\n                })\n\n        return this.lock.enqueue(\"talk\", () =>\n            this.sendMsgAsync(pkt)\n                .then(handleReturnAsync))\n    }\n\n\n    private sendMsgAsync(buf: Uint8Array, serial: number = 0) {\n        // Util.assert(buf.length <= this.maxMsgSize)\n        let frame = new Uint8Array(64)\n        let loop = (pos: number): Promise<void> => {\n            let len = buf.length - pos\n            if (len <= 0) return Promise.resolve()\n            if (len > 63) {\n                len = 63\n                frame[0] = HF2_FLAG_CMDPKT_BODY;\n            } else {\n                frame[0] = HF2_FLAG_CMDPKT_LAST;\n            }\n            if (serial) frame[0] = serial == 1 ? HF2_FLAG_SERIAL_OUT : HF2_FLAG_SERIAL_ERR;\n            frame[0] |= len;\n            for (let i = 0; i < len; ++i)\n                frame[i + 1] = buf[pos + i]\n            return this.io.sendPacketAsync(frame)\n                .then(() => loop(pos + len))\n        }\n        return loop(0)\n    }\n\n    onEvent(id: number, f: (buf: Uint8Array) => void) {\n        U.assert(!!(id & HF2_EV_MASK))\n        this.eventHandlers[id + \"\"] = f\n    }\n\n    onJDMessage(f: (buf: Uint8Array) => void) {\n        this.talkAsync(HF2_CMD_JDS_CONFIG, U.encodeU32LE([1]))\n        this.onEvent(HF2_EV_JDS_PACKET, f)\n    }\n\n    sendJDMessageAsync(buf: Uint8Array) {\n        return this.talkAsync(HF2_CMD_JDS_SEND, buf)\n    }\n\n    handleEvent(buf: Uint8Array) {\n        let evid = U.read32(buf, 0)\n        let f = this.eventHandlers[evid + \"\"]\n        if (f) {\n            f(buf.slice(4))\n        } else {\n            this.io.log(\"unhandled event: \" + evid.toString(16))\n        }\n    }\n    onSerial(data: Uint8Array, iserr: boolean) {\n        console.log(\"SERIAL:\", U.bufferToString(data))\n    }\n\n    async init() {\n        await this.io.init()\n        const buf = await this.talkAsync(HF2_CMD_INFO)\n        this.io.log(\"Connected to: \" + U.bufferToString(buf))\n    }\n}\n","import * as U from \"./utils\"\nimport * as jd from \"./constants\"\nimport { Packet } from \"./packet\"\n\nconst service_classes: U.SMap<number> = {\n    \"<disabled>\": -1,\n    CTRL: 0,\n    LOGGER: 0x12dc1fca,\n    BATTERY: 0x1d2a2acd,\n    ACCELEROMETER: 0x1f140409,\n    BUTTON: 0x1473a263,\n    TOUCHBUTTON: 0x130cf5be,\n    LIGHT_SENSOR: 0x15e7a0ff,\n    MICROPHONE: 0x1a5c5866,\n    THERMOMETER: 0x1421bac7,\n    SWITCH: 0x14218172,\n    PIXEL: 0x1768fbbf,\n    HAPTIC: 0x116b14a3,\n    LIGHT: 0x126f00e0,\n    KEYBOARD: 0x1ae4812d,\n    MOUSE: 0x14bc97bf,\n    GAMEPAD: 0x100527e8,\n    MUSIC: 0x1b57b1d7,\n    SERVO: 0x12fc9103,\n    CONTROLLER: 0x188ae4b8,\n    LCD: 0x18d5284c,\n    MESSAGE_BUS: 0x115cabf5,\n    COLOR_SENSOR: 0x14d6dda2,\n    LIGHT_SPECTRUM_SENSOR: 0x16fa0c0d,\n    PROXIMITY: 0x14c1791b,\n    TOUCH_BUTTONS: 0x1acb49d5,\n    SERVOS: 0x182988d8,\n    ROTARY_ENCODER: 0x10fa29c9,\n    DNS: 0x117729bd,\n    PWM_LIGHT: 0x1fb57453,\n    BOOTLOADER: 0x1ffa9948,\n    ARCADE_CONTROLS: 0x1deaa06e,\n    POWER: 0x1fa4c95a,\n    SLIDER: 0x1f274746,\n    MOTOR: 0x17004cd8,\n    TCP: 0x1b43b70b,\n    WIFI: 0x18aae1fa,\n}\n\nconst generic_commands: U.SMap<number> = {\n    CMD_ADVERTISEMENT_DATA: 0x00,\n    CMD_EVENT: 0x01,\n    CMD_CALIBRATE: 0x02,\n    CMD_GET_DESCRIPTION: 0x03,\n    /*\n    CMD_CTRL_NOOP: 0x80,\n    CMD_CTRL_IDENTIFY: 0x81,\n    CMD_CTRL_RESET: 0x82,\n    */\n}\n\nconst generic_regs: U.SMap<number> = {\n    REG_INTENSITY: 0x01,\n    REG_VALUE: 0x02,\n    REG_IS_STREAMING: 0x03,\n    REG_STREAMING_INTERVAL: 0x04,\n    REG_LOW_THRESHOLD: 0x05,\n    REG_HIGH_THRESHOLD: 0x06,\n    REG_MAX_POWER: 0x07,\n    REG_READING: 0x101\n}\n\nconst serv_decoders: U.SMap<(p: Packet) => string> = {\n    LOGGER: (pkt: Packet) => {\n        const pri = priority()\n        if (!pri) return null\n        return `${pri} \"${U.bufferToString(pkt.data)}\"`\n\n        function priority() {\n            switch (pkt.service_command) {\n                case 0x80: return \"dbg\"\n                case 0x81: return \"log\"\n                case 0x82: return \"warn\"\n                case 0x83: return \"err\"\n                default: return null\n            }\n        }\n    }\n}\n\nfunction reverseLookup(map: U.SMap<number>, n: number) {\n    for (let k of Object.keys(map)) {\n        if (map[k] == n)\n            return k\n    }\n    return toHex(n)\n}\n\nfunction serviceName(n: number) {\n    if (n == null)\n        return \"?\"\n    return reverseLookup(service_classes, n)\n}\n\nfunction commandName(n: number) {\n    let pref = \"\"\n    if ((n & jd.CMD_TOP_MASK) == jd.CMD_SET_REG) pref = \"SET[\"\n    else if ((n & jd.CMD_TOP_MASK) == jd.CMD_GET_REG) pref = \"GET[\"\n    if (pref) {\n        const reg = n & jd.CMD_REG_MASK\n        return pref + reverseLookup(generic_regs, reg) + \"]\"\n    }\n    return reverseLookup(generic_commands, n)\n}\n\n\nfunction toHex(n: number) {\n    return \"0x\" + n.toString(16)\n}\n\n\nfunction num2str(n: number) {\n    return n + \" (0x\" + n.toString(16) + \")\"\n}\n\nexport interface Options {\n    skipRepeatedAnnounce?: boolean;\n    skipRepeatedReading?: boolean;\n}\n\nexport function printPacket(pkt: Packet, opts: Options = {}): string {\n    const frame_flags = pkt._header[3]\n\n    let devname = pkt.dev ? pkt.dev.name || pkt.dev.shortId : pkt.device_identifier\n\n    if (frame_flags & jd.JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS)\n        devname = \"[mul] \" + serviceName(pkt.multicommand_class)\n\n    const serv_id = serviceName(pkt?.dev?.serviceAt(pkt.service_number))\n    let service_name = `${serv_id} (${pkt.service_number})`\n    const cmd = pkt.service_command\n    let cmdname = commandName(cmd)\n    if (pkt.service_number == jd.JD_SERVICE_NUMBER_CRC_ACK) {\n        service_name = \"CRC-ACK\"\n        cmdname = toHex(cmd)\n    }\n    if (pkt.service_number == jd.JD_SERVICE_NUMBER_STREAM) {\n        service_name = \"STREAM\"\n        cmdname = `port:${cmd >> jd.STREAM_PORT_SHIFT} cnt:${cmd & jd.STREAM_COUNTER_MASK}`\n        if (cmd & jd.STREAM_METADATA_MASK)\n            cmdname += \" meta\"\n        if (cmd & jd.STREAM_CLOSE_MASK)\n            cmdname += \" close\"\n    }\n\n    let pdesc = `${devname}/${service_name}: ${cmdname}; sz=${pkt.size}`\n\n    if (frame_flags & jd.JD_FRAME_FLAG_COMMAND)\n        pdesc = 'to ' + pdesc\n    else\n        pdesc = 'from ' + pdesc\n    if (frame_flags & jd.JD_FRAME_FLAG_ACK_REQUESTED)\n        pdesc = `[ack:${toHex(pkt.crc)}] ` + pdesc\n\n    const d = pkt.data\n    if (pkt.dev && pkt.service_number == 0 && pkt.service_command == jd.CMD_ADVERTISEMENT_DATA) {\n        if (pkt.dev.lastServiceUpdate < pkt.timestamp) {\n            if (opts.skipRepeatedAnnounce)\n                return \"\"\n            else\n                pdesc = \" ====== \" + pdesc\n        } else {\n            const services = []\n            for (let i = 0; i < pkt.dev.services.length >> 2; i++) {\n                services.push(serviceName(pkt.dev.serviceAt(i)))\n            }\n            pdesc += \"; \" + \"Announce services: \" + services.join(\", \")\n        }\n    } else {\n        if (pkt.dev && !pkt.is_command && pkt.service_command == (jd.CMD_GET_REG | jd.REG_READING)) {\n            if (opts.skipRepeatedReading && pkt.dev.currentReading && U.bufferEq(pkt.dev.currentReading, pkt.data))\n                return \"\"\n            pkt.dev.currentReading = pkt.data\n        }\n\n        const decoder = serv_decoders[serv_id]\n        const decoded = decoder ? decoder(pkt) : null\n        if (decoded) {\n            pdesc += \"; \" + decoded\n        } else if (pkt.service_command == jd.CMD_EVENT) {\n            pdesc += \"; ev=\" + num2str(pkt.intData) + \" arg=\" + (U.read32(pkt.data, 4) | 0)\n        } else if (0 < d.length && d.length <= 4) {\n            let v0 = pkt.uintData, v1 = pkt.intData\n            pdesc += \"; \" + num2str(v0)\n            if (v0 != v1)\n                pdesc += \"; signed: \" + num2str(v1)\n        } else if (d.length) {\n            pdesc += \"; \" + U.toHex(d)\n        }\n    }\n\n    return Math.round(pkt.timestamp) + \"ms: \" + pdesc\n}\n\nexport interface ParsedFrame {\n    timestamp: number\n    data: Uint8Array\n    info?: string\n}\n\nexport function parseLog(logcontents: string) {\n    const res: ParsedFrame[] = []\n    let frameBytes = []\n    let lastTime = 0\n    for (let ln of logcontents.split(/\\r?\\n/)) {\n        let m = /^JD (\\d+) ([0-9a-f]+)/i.exec(ln)\n        if (m) {\n            res.push({\n                timestamp: parseInt(m[1]),\n                data: U.fromHex(m[2])\n            })\n            continue\n        }\n\n        m = /^([\\d\\.]+),Async Serial,.*(0x[A-F0-9][A-F0-9])/.exec(ln)\n        if (!m)\n            continue\n        const tm = parseFloat(m[1])\n        if (lastTime && tm - lastTime > 0.1) {\n            res.push({\n                timestamp: lastTime * 1000,\n                data: new Uint8Array(frameBytes),\n                info: \"timeout\"\n            })\n            frameBytes = []\n            lastTime = 0\n        }\n\n        lastTime = tm\n        if (ln.indexOf(\"framing error\") > 0) {\n            if (frameBytes.length > 0)\n                res.push({\n                    timestamp: lastTime * 1000,\n                    data: new Uint8Array(frameBytes),\n                })\n            frameBytes = []\n            lastTime = 0\n        } else {\n            frameBytes.push(parseInt(m[2]))\n        }\n    }\n\n    return res\n}\n\n"],"names":["U.delay","U.assert","U.PromiseBuffer","U.PromiseQueue","U.memcpy","U.write32","U.write16","U.read16","U.encodeU32LE","U.read32","U.bufferToString","toHex","jd.CMD_TOP_MASK","jd.CMD_SET_REG","jd.CMD_GET_REG","jd.CMD_REG_MASK","jd.JD_FRAME_FLAG_IDENTIFIER_IS_SERVICE_CLASS","jd.JD_SERVICE_NUMBER_CRC_ACK","jd.JD_SERVICE_NUMBER_STREAM","jd.STREAM_PORT_SHIFT","jd.STREAM_COUNTER_MASK","jd.STREAM_METADATA_MASK","jd.STREAM_CLOSE_MASK","jd.JD_FRAME_FLAG_COMMAND","jd.JD_FRAME_FLAG_ACK_REQUESTED","jd.CMD_ADVERTISEMENT_DATA","jd.REG_READING","U.bufferEq","jd.CMD_EVENT","U.toHex","U.fromHex"],"mappings":"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"}