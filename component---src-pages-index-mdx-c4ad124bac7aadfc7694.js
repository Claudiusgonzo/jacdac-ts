(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"8ypT":function(e,t,n){},Bl7J:function(e,t,n){"use strict";var a=n("f98A"),c=n("q1tI"),s=n.n(c),r=n("Wbzz"),o=function(e){var t=e.siteTitle;return s.a.createElement("header",{style:{background:"rebeccapurple",marginBottom:"1.45rem"}},s.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"1.45rem 1.0875rem"}},s.a.createElement("h1",{style:{margin:0}},s.a.createElement(r.Link,{to:"/",style:{color:"white",textDecoration:"none"}},t))))};o.defaultProps={siteTitle:""};var i=o;n("8ypT"),t.a=function(e){var t=e.children,n=a.data;return s.a.createElement(s.a.Fragment,null,s.a.createElement(i,{siteTitle:n.site.siteMetadata.title}),s.a.createElement("div",{style:{margin:"0 auto",maxWidth:960,padding:"0 1.0875rem 1.45rem"}},s.a.createElement("main",null,t),s.a.createElement("footer",null,"Â© ",(new Date).getFullYear(),", Built with"," ",s.a.createElement("a",{href:"https://www.gatsbyjs.org"},"Gatsby"))))}},f98A:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"title":"JACDAC TypeScript Documentation"}}}}')},pfKO:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return i}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("q1tI");var a=n("7ljp"),c=n("Bl7J");var s={},r={_frontmatter:s},o=c.a;function i(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,c={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,["components"]);return Object(a.b)(o,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",null,"JACDAC TypeScript"),Object(a.b)("p",null,"This repository contains a TypeScript/JavaScript client library for the ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://microsoft.github.io/jacdac"}),"JACDAC")," protocol."),Object(a.b)("h2",null,"Import"),Object(a.b)("p",null,"Add the ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://www.npmjs.com/package/jacdac-ts"}),"jacdac-ts npm")," module to your project."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"npm install --save jacdac-ts\n")),Object(a.b)("p",null,"You can also use CDN services to import ",Object(a.b)("inlineCode",{parentName:"p"},"jacdac")," into your html page directly."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),'<script src="https://cdn.jsdelivr.net/npm/jacdac-ts@VERSION"><\/script>\n')),Object(a.b)("h2",null,"Usage"),Object(a.b)("p",null,"Import the library in your Typescript project."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import * from 'jacdac-ts'\n")),Object(a.b)("h3",null,"Connect to the bus"),Object(a.b)("p",null,"You will need to connect to the JACDAC bus via WebUSB. This needs to be done from a user action, like a click,\nfor security reasons."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"const jd = await jacdac.requestUSBBus();\n")),Object(a.b)("h3",null,"Devices"),Object(a.b)("p",null,"Once you have the bus connected, you can register to events when device get connected or disconnected."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"jd.on('deviceconnect', dev => console.log(`connect ${dev}`)\njd.on('devicedisconnect', dev => console.log(`disconnect ${dev}`)\njd.on('deviceannounce', dev => console.log(`announce ${dev}`)\n")),Object(a.b)("p",null,"Remember that when a device is first connected, it's list of services might not yet be populated.\nThis happens later on the ",Object(a.b)("inlineCode",{parentName:"p"},"deviceannounce")," event."),Object(a.b)("p",null,"You can get a snapshot of the list of devices from the bus."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"const devices = jd.devices()\n")),Object(a.b)("h2",null,"Online tools"),Object(a.b)("p",null,"A list of sample tools to operate on JACDAC devices, built with this library."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/packets"}),"packets"),", sniff all packets on the bus"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/devices"}),"devices"),", list of connected devices"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/console"}),"console"),", turns on verbose console and display messages"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/streaming"}),"streaming"),", live streaming of sensor data into range widgets"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"./tools/streaming-rickshaw"}),"streaming-rickshaw"),", live streaming of sensor data into graphs")))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-index-mdx-c4ad124bac7aadfc7694.js.map